workspace_name = "libsdl12"

macx11_hdrs = [
    "@macx11//:X11/Xlib.h",
    "@macx11//:X11/X.h",
    "@macx11//:X11/Xfuncproto.h",
    "@macx11//:X11/Xosdefs.h",
    "@macx11//:X11/Xatom.h",

    "@macx11//:X11/Xlibint.h",
    "@macx11//:X11/Xproto.h",
    "@macx11//:X11/Xmd.h",
    "@macx11//:X11/Xprotostr.h",
    "@macx11//:X11/XlibConf.h",
    "@macx11//:X11/Xfuncs.h",
    "@macx11//:X11/Xutil.h",
    "@macx11//:X11/keysym.h",
    "@macx11//:X11/keysymdef.h",
    "@macx11//:X11/extensions/XShm.h",
    "@macx11//:X11/extensions/shm.h",
    "@macx11//:X11/extensions/Xrandr.h",
    "@macx11//:X11/extensions/randr.h",
    "@macx11//:X11/extensions/Xrender.h",
    "@macx11//:X11/extensions/render.h",
    "@macx11//:X11/Xdefs.h",
]
cc_library(
    name = "sdl",
    srcs = glob([
        # Based on README.Porting
        "src/*.c",                "src/*.h",
        "src/audio/*.c",          "src/audio/*.h",
        "src/cdrom/*.c",          "src/cdrom/*.h",
        "src/cpuinfo/*.c",        "src/cpuinfo/*.h",
        "src/events/*.c",         "src/events/*.h",
        "src/file/*.c",           "src/file/*.h",
        "src/joystick/*.c",       "src/joystick/*.h",
        "src/stdlib/*.c",         "src/stdlib/*.h",
        "src/thread/*.c",         "src/thread/*.h",
        "src/timer/*.c",          "src/timer/*.h",
        "src/video/*.c",          "src/video/*.h",
        "src/audio/disk/*.c",     "src/audio/disk/*.h",
        "src/audio/dummy/*.c",    "src/audio/dummy/*.h",
        "src/video/dummy/*.c",    "src/video/dummy/*.h",
        "src/joystick/dummy/*.c", "src/joystick/dummy/*.h",
        "src/cdrom/dummy/*.c",    "src/cdrom/dummy/*.h",
        "src/thread/generic/*.c", "src/thread/generic/*.h",
        "src/timer/dummy/*.c",    "src/timer/dummy/*.h",
        "src/loadso/dummy/*.c",   "src/loadso/dummy/*.h",

        "src/audio/macosx/*.c",   "src/audio/macosx/*.h",
        "src/cdrom/macosx/*.c",   "src/cdrom/macosx/*.h",
        "src/joystick/darwin/*.c","src/joystick/darwin/*.h",
        "src/loadso/dlopen/*.c",  "src/loadso/dlopen/*.h",
        "src/loadso/macosx/*.c",  "src/loadso/macosx/*.h",
        "src/timer/unix/*.c",     "src/timer/unix/*.h",
        "src/video/quartz/*.c",   "src/video/quartz/*.h",  # TODO(ivucica): add .m
        #"src/video/maccommon/*.c","src/video/maccommon/*.h",
        #"src/video/macdsp/*.c",   "src/video/macdsp/*.h",
        #"src/video/macrom/*.c",   "src/video/macrom/*.h",
        #"src/video/x11/*.c",      "src/video/x11/*.h",
        "src/video/dga/*.c",      "src/video/dga/*.h",
        "src/video/Xext/*.c",     "src/video/Xext/*.h",
        ]) +
        glob(["src/thread/pthread/*.h"]) +
        macx11_hdrs +
        [],
    hdrs = [i.replace("include/", "SDL/") for i in glob(["include/*.h"])],
    includes = [".", "SDL"],
    copts = [
        "-Iexternal/macx11",
        "-DSDL_VIDEO_DRIVER_QUARTZ=1",
    ],
    deps = [":sdlobjc"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "sdlheaders",
    srcs = glob(["include/*.h"]),
    outs = [i.replace("include", "SDL") for i in glob(["include/*.h"])],
    cmd = "mkdir -p $(@D)/SDL; for i in $(SRCS) ; do cp \"$$i\" \"$(@D)/SDL/$$(basename \"$${i}\")\"; done",
    visibility = ["//visibility:public"],
)

# objc_library() is only intended for use with iOS. This is most
# unfortunate.
# We'll instead append .c to the inputs, then use Clang with the
# -x objective-c option.
genrule(
    name = "objectivec-as-c-hack",
    srcs = glob([
        "src/video/quartz/*.m",
        #"Xcode/TemplatesForXcodeSnowLeopard/SDL Cocoa Application/*.m",
        ]),
    outs = ["objc" + i + ".c" for i in glob([
        "src/video/quartz/*.m",
        #"Xcode/TemplatesForXcodeSnowLeopard/SDL Cocoa Application/*.m",
        ])],
    cmd = "mkdir -p $(@D)/objcsrc/video/quartz; for i in $(SRCS) ; do cp \"$$i\" \"$(@D)/objcsrc/video/quartz/$$(basename \"$${i}\").c\"; done",
    visibility = ["//visibility:private"],
)

cc_library(
    name = "sdlobjc",
    srcs = (["objc" + i + ".c" for i in glob(["src/video/quartz/*.m"])] +
        glob(["src/video/quartz/*.h", "src/video/*.h"]) +
        [i.replace("include/", "SDL/") for i in glob(["include/*.h"])]) +
        macx11_hdrs,
    includes = [".", "SDL"],
    copts = [
        "-x", "objective-c",
        "-Iexternal/macx11",
        "-Iexternal/" + workspace_name + "/src/video/quartz",
    ]
)

# TODO(ivucica): Figure out how to work around the space in the path.
cc_library(
    name = "sdlmain",
    srcs = [
        #"objcXcode/TemplatesForXcodeSnowLeopard/SDL Cocoa Application/SDLMain.m",
    ],
    copts = [
        "-x", "objective-c",
     ],
)

config_setting(
    name = "darwin",
    values = {"host_cpu": "darwin"}
)

cc_library(
    name = "sdl",
    srcs = glob([
        # Based on README.Porting
        "src/*.c",                "src/*.h",
        "src/audio/*.c",          "src/audio/*.h",
        "src/cdrom/*.c",          "src/cdrom/*.h",
        "src/cpuinfo/*.c",        "src/cpuinfo/*.h",
        "src/events/*.c",         "src/events/*.h",
        "src/file/*.c",           "src/file/*.h",
        "src/joystick/*.c",       "src/joystick/*.h",
        "src/stdlib/*.c",         "src/stdlib/*.h",
        "src/thread/*.c",         "src/thread/*.h",
        "src/timer/*.c",          "src/timer/*.h",
        "src/video/*.c",          "src/video/*.h",
        "src/audio/disk/*.c",     "src/audio/disk/*.h",
        "src/audio/dummy/*.c",    "src/audio/dummy/*.h",
        "src/video/dummy/*.c",    "src/video/dummy/*.h",
        "src/joystick/dummy/*.c", "src/joystick/dummy/*.h",
        "src/cdrom/dummy/*.c",    "src/cdrom/dummy/*.h",
        "src/thread/generic/*.c", "src/thread/generic/*.h",
        "src/timer/dummy/*.c",    "src/timer/dummy/*.h",
        "src/loadso/dummy/*.c",   "src/loadso/dummy/*.h",

        "src/loadso/dlopen/*.c",  "src/loadso/dlopen/*.h",
        "src/timer/unix/*.c",     "src/timer/unix/*.h",
        "src/video/Xext/*.c",     "src/video/Xext/*.h",
        ]) + select({
            ":darwin": glob([
                "src/audio/macosx/*.c",   "src/audio/macosx/*.h",
                "src/cdrom/macosx/*.c",   "src/cdrom/macosx/*.h",
                "src/joystick/darwin/*.c","src/joystick/darwin/*.h",
                "src/loadso/macosx/*.c",  "src/loadso/macosx/*.h",
                "src/video/quartz/*.c",   "src/video/quartz/*.h",  # TODO(ivucica): add .m
                "src/video/dga/*.c",      "src/video/dga/*.h",
                #"src/video/maccommon/*.c","src/video/maccommon/*.h",
                #"src/video/macdsp/*.c",   "src/video/macdsp/*.h",
                #"src/video/macrom/*.c",   "src/video/macrom/*.h",
            ]),
            "//conditions:default": glob([
                "src/video/x11/*.c",      "src/video/x11/*.h",
            ]),
        }) +
        glob(["src/thread/pthread/*.h"]) +
        [
            "@x11repository//:X11/Xlib.h",
            "@x11repository//:X11/X.h",
            "@x11repository//:X11/Xfuncproto.h",
            "@x11repository//:X11/Xosdefs.h",
            "@x11repository//:X11/Xatom.h",

            "@x11repository//:X11/Xlibint.h",
            "@x11repository//:X11/Xproto.h",
            "@x11repository//:X11/Xmd.h",
            "@x11repository//:X11/Xprotostr.h",
            "@x11repository//:X11/XlibConf.h",
            "@x11repository//:X11/Xfuncs.h",
            "@x11repository//:X11/Xutil.h",
            "@x11repository//:X11/keysym.h",
            "@x11repository//:X11/keysymdef.h",
            "@x11repository//:X11/extensions/XShm.h",
            "@x11repository//:X11/extensions/shm.h",
            "@x11repository//:X11/extensions/Xrandr.h",
            "@x11repository//:X11/extensions/randr.h",
            "@x11repository//:X11/extensions/Xrender.h",
            "@x11repository//:X11/extensions/render.h",
            "@x11repository//:X11/Xdefs.h",
        ],
    hdrs = [i.replace("include/", "SDL/") for i in glob(["include/*.h"])],
    includes = [".", "SDL"],
    copts = ["-Iexternal/x11repository"],
    visibility = ["//visibility:public"],
)

# TODO(ivucica): Running configure should be done only on Linux, and not
# on OS X.
genrule(
    name = "sdlheaders",
    srcs = ["configure", "README", "Makefile.in", "sdl-config.in", "sdl.pc.in", "SDL.spec.in", "SDL.qpg.in", "include/SDL_config.h.in"] + glob(["build-scripts/*", "include/*.h"]),
    outs = [i.replace("include", "SDL") for i in glob(["include/*.h"])],
    cmd = "\n".join([
        "mkdir -p $(@D)/SDL",
        "mkdir -p $(@D)/build-scripts",
        "mkdir -p $(@D)/include",
        "for i in $(SRCS) ; do",
        "  if [[ $${i} == external/libsdl12/include/* ]] ; then",  # TODO(ivucica): don't hardcode repo name.
        "    cp \"$$i\" \"$(@D)/SDL/$$(basename \"$${i}\")\"",
        "    cp \"$$i\" \"$(@D)/include/$$(basename \"$${i}\")\"",
        "  elif [[ $${i} == external/libsdl12/build-scripts/* ]] ; then",
        "    cp \"$$i\" \"$(@D)/build-scripts/$$(basename \"$${i}\")\"",
        "  else",
        "    cp \"$${i}\" \"$(@D)/$$(basename \"$${i}\")\"",
        "  fi",
        "done",
        "$(@D)/configure > $(@D)/configure.consoleoutput 2>&1 " +
        "  || (cat $(@D)/configure.consoleoutput; exit 1)",
    ]),
    visibility = ["//visibility:public"],
)
